import Head from "next/head";
import Image from "next/image";
import { Jost } from "next/font/google";
import styles from "@/styles/roadmap.module.scss";
import React from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import { SuggestionsCtx } from "@/context";

const inter = Jost({ subsets: ["latin"] });

export default function Home() {
  const { suggestions, setSuggestions } = React.useContext(SuggestionsCtx);

  const router = useRouter();
  const [page, setPage] = React.useState([1]);

  React.useEffect(() => {

    let size = window.innerWidth;
    console.log(size);
    if (size > 400) {
      setPage([1, 2, 3]);
      console.log(page);
      return;
    }

    setPage([1]);
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.cont}>
          <nav className={styles.nav}>
            <div className={styles.back}>
              <div onClick={() => router.back()} className={styles.bac}>
                <span></span>Go Back
              </div>
              <text>Roadmap</text>
            </div>
            <Link href="/feedback-new">
              {" "}
              <button className={styles.btn}>+ Add Feedback</button>
            </Link>
          </nav>
          <div className={styles.heder}>
            <div
              className={styles.one}
              onClick={() => {
                setPage([1]);
              }}
              style={{
                borderBottom: page[0] == 1 ? "#f49f85 3px solid" : "none",
              }}
            >
              Planned ({suggestions.filter((item) => item?.status === "Planned")?.length})
            </div>
            <div
              className={styles.two}
              onClick={() => {
                setPage([2]);
              }}
              style={{
                borderBottom: page[0] == 2 ? "#ad1fea 3px solid" : "none",
              }}
            >
              In-Progress ({suggestions.filter((item) => item?.status === "In-Progress")?.length})
            </div>
            <div
              className={styles.three}
              onClick={() => {
                setPage([3]);
              }}
              style={{
                borderBottom: page[0] == 3 ? "#62bcfa 3px solid" : "none",
              }}
            >
              Live ({suggestions.filter((item) => item?.status === "Live")?.length})
            </div>
          </div>
          <div className={styles.map}>
            {page.includes(1) ? (
              <div className={styles.planned}>
                <div className={styles.header}>
                  <text> Planned ({suggestions.filter((item) => item?.status === "Planned")?.length})</text>
                  <p>Ideas prioritized for research</p>
                </div>
                {suggestions?.filter((item) => {
                  return item?.status == "Planned"
                }).map((item, index) => {
                  return (
                    <div className={styles.content}>
                      <div className={styles.dotCont}>
                        <div className={styles.dot1}></div>
                        <p>Planned</p>
                      </div>
                      <div className={styles.info}>
                        <Link href={"/feedback-detail/?id="
                        /*sends the id and tile of the suggestion
                           you want to read to the details
                           page so that it displays that
                           specific suggestions details*/ + item?.id}><text>{item?.title}</text></Link>
                        <p>
                          {item?.details}
                        </p>
                      </div>
                      <button className={styles.btn2}>{item?.category}</button>
                      <div className={styles.upvoteCont}>
                        <button onClick={() => {
                          let tempsuggestions = [...suggestions]
                          for (var i in tempsuggestions) {
                            if (tempsuggestions[i].id == item?.id) {
                              tempsuggestions[i].upvoates = tempsuggestions[i].upvoates + 1;

                              setSuggestions([...tempsuggestions])
                              break; //Stop this loop, we found it!
                            }
                          }
                        }} className={styles.upvote}>
                          <span></span>{item?.upvoates}
                        </button>
                        <div className={styles.comment}>
                          <span></span>{item?.comments?.length}
                        </div>
                      </div>
                    </div>
                  )
                })}


              </div>
            ) : null}
            {page.includes(2) ? (
              <div className={styles.inprogress}>
                <div className={styles.header}>
                  <text>In-Progress ({suggestions.filter((item) => item?.status === "In-Progress")?.length})</text>
                  <p>Currently being developed</p>
                </div>
                {suggestions?.filter((item) => {
                  return item?.status == "In-Progress"
                }).map((item, index) => {
                  return (
                    <div className={styles.content2}>
                      <div className={styles.dotCont}>
                        <div className={styles.dot2}></div>
                        <p>In-Progress</p>
                      </div>
                      <div className={styles.info}>
                        <Link href={"/feedback-detail/?id="
                        /*sends the id and tile of the suggestion
                           you want to read to the details
                           page so that it displays that
                           specific suggestions details*/ + item?.id}><text>{item?.title}</text></Link>

                        <p>
                          {item?.details}
                        </p>
                      </div>
                      <button className={styles.btn2}>{item?.category}</button>
                      <div className={styles.upvoteCont}>
                        <button onClick={() => {
                          let tempsuggestions = [...suggestions]
                          for (var i in tempsuggestions) {
                            if (tempsuggestions[i].id == item?.id) {
                              tempsuggestions[i].upvoates = tempsuggestions[i].upvoates + 1;

                              setSuggestions([...tempsuggestions])
                              break; //Stop this loop, we found it!
                            }
                          }
                        }} className={styles.upvote}>
                          <span></span>{item?.upvoates}
                        </button>
                        <div className={styles.comment}>
                          <span></span>{item?.comments?.length}
                        </div>
                      </div>
                    </div>
                  )
                })}
              </div>
            ) : null}
            {page.includes(3) ? (
              <div className={styles.live}>
                <div className={styles.header}>
                  <text>Live ({suggestions.filter((item) => item?.status === "Live")?.length})</text>
                  <p>Released features</p>
                </div>
                {suggestions?.filter((item) => {
                  return item?.status == "Live"
                }).map((item, index) => {
                  return (
                    <div className={styles.content3}>
                      <div className={styles.dotCont}>
                        <div className={styles.dot3}></div>
                        <p>Live</p>
                      </div>
                      <div className={styles.info}>
                        <Link href={"/feedback-detail/?id="
                        /*sends the id and tile of the suggestion
                           you want to read to the details
                           page so that it displays that
                           specific suggestions details*/ + item?.id}><text>{item?.title}</text></Link>

                        <p>
                          {item?.details}
                        </p>
                      </div>
                      <button className={styles.btn2}>{item?.category}</button>
                      <div className={styles.upvoteCont}>
                        <button onClick={() => {
                          let tempsuggestions = [...suggestions]
                          for (var i in tempsuggestions) {
                            if (tempsuggestions[i].id == item?.id) {
                              tempsuggestions[i].upvoates = tempsuggestions[i].upvoates + 1;

                              setSuggestions([...tempsuggestions])
                              break; //Stop this loop, we found it!
                            }
                          }
                        }} className={styles.upvote}>
                          <span></span>{item?.upvoates}
                        </button>
                        <div className={styles.comment}>
                          <span></span>{item?.comments?.length}
                        </div>
                      </div>
                    </div>
                  )
                })}
              </div>
            ) : null}
          </div>
        </div>
      </main>
    </div>
  );
}
