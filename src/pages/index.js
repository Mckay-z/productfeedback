import Head from "next/head";
import Image from "next/image";
import { Jost } from "next/font/google";
import styles from "@/styles/Home.module.scss";
import styles2 from "@/styles/suggestions.module.scss";
import Link from "next/link";
import React from "react";
import { SuggestionsCtx } from "@/context";
import Popup from "./popup";

const inter =Jost({ subsets: ["latin"] });

export default function Home() {
  const { suggestions, setSuggestions } = React.useContext(SuggestionsCtx);

  const [filter, setFilter] = React.useState("");
  const [sort, setSort] = React.useState("Most Upvotes");
  const [openPopup, setopenPopup] = React.useState(false);

  return (
    <div className={styles.container}>
      <Head>
        <title>Product Feedback App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.sidebar}>
          <div className={styles.feedBoard}>
            <div className={styles.txt1}>
              <text>Frontend Mentor</text>
              <p>Feedback Board</p>
            </div>
            <div
              onClick={() => setopenPopup(!openPopup)}
              className={openPopup ? styles.menux : styles.menu}//opens and closes the menu
            ></div>
          </div>
          <div className={styles.sideOptions}>
            <div className={styles.lineCont}>
              <div className={styles.line}>
                <div
                  onClick={() => {
                    setFilter("");//sets the filter to none ie it displays all elements in the array
                  }}
                  className={styles.btn1}
                  style={{
                    backgroundColor: filter == "" ? "#4661e6" : "#f2f4ff",
                    color: filter == "" ? "#ffffff" : "#4661e6",
                  }}
                >
                  All
                </div>
                <div
                  onClick={() => {
                    setFilter("UI");
                  }}
                  className={styles.btn2}
                  style={{
                    backgroundColor: filter == "UI" ? "#4661e6" : "#f2f4ff",
                    color: filter == "UI" ? "#ffffff" : "#4661e6",
                  }}
                >
                  UI
                </div>
                <div
                  onClick={() => {
                    setFilter("UX");
                  }}
                  className={styles.btn3}
                  style={{
                    backgroundColor: filter == "UX" ? "#4661e6" : "#f2f4ff",
                    color: filter == "UX" ? "#ffffff" : "#4661e6",
                  }}
                >
                  UX
                </div>
              </div>
              <div className={styles.line2}>
                <div
                  onClick={() => {
                    setFilter("Enhancement");
                  }}
                  className={styles.btn4}
                  style={{
                    backgroundColor:
                      filter == "Enhancement" ? "#4661e6" : "#f2f4ff",
                    color: filter == "Enhancement" ? "#ffffff" : "#4661e6",
                  }}
                >
                  Enhancement
                </div>
                <div
                  onClick={() => {
                    setFilter("Bug");
                  }}
                  className={styles.btn5}
                  style={{
                    backgroundColor: filter == "Bug" ? "#4661e6" : "#f2f4ff",
                    color: filter == "Bug" ? "#ffffff" : "#4661e6",
                  }}
                >
                  Bug
                </div>
              </div>
              <div className={styles.line}>
                <div
                  onClick={() => {
                    setFilter("Feature");
                  }}
                  className={styles.btn6}
                  style={{
                    backgroundColor:
                      filter == "Feature" ? "#4661e6" : "#f2f4ff",
                    color: filter == "Feature" ? "#ffffff" : "#4661e6",
                  }}
                >
                  Feature
                </div>
              </div>
            </div>
          </div>
          <div className={styles.roadMap}>
            <div className={styles.line3}>
              <text>Roadmap</text>
              <Link href="/roadmap">View</Link>
            </div>
            <div className={styles.line4}>
              <div className={styles.txt2}>
                <div className={styles.dotCont}>
                  <div className={styles.dot1}></div>
                  <p>Planned</p>
                </div>
                <text>{suggestions.filter((item) => item?.status === "Planned")?.length}</text>
              </div>
              <div className={styles.txt3}>
                <div className={styles.dotCont}>
                  <div className={styles.dot2}></div>
                  <p>In-Progress</p>
                </div>
                <text>{suggestions.filter((item) => item?.status === "In-Progress")?.length}</text>
              </div>
              <div className={styles.txt4}>
                <div className={styles.dotCont}>
                  <div className={styles.dot3}></div>
                  <p>Live</p>
                </div>
                <text>{suggestions.filter((item) => item?.status === "Live")?.length}</text>
              </div>
            </div>
          </div>
        </div>
        <div className={styles.sidebar2}>
          <div className={styles.suggestion}>
            <div className={styles.leftside}>
              <div className={styles.img1}></div>{" "}
              <text>{suggestions?.filter((item) => {
                return item?.category.includes(filter) && item?.status == "Suggestion";//return all items in the array whose category falls under the selected state
              })?.length
              } Suggestion</text>
              <div onChange={(v) => {
                setSort(v?.target?.value)
              }} className={styles.label}>
                <label>Sort by :</label>
                <select className={styles.sortby} id="sortby">
                  <option value="Most Upvotes">Most Upvotes</option>
                  <option value="Least Upvotes">Least Upvotes</option>
                  <option value="Most Comments">Most Comments</option>
                  <option value="Least Comments">Least Comments</option>
                </select>
              </div>
            </div>
            <Link href={"/feedback-new"}>
              {" "}
              <button className={styles.btn7}>+ Add Feedback</button>
            </Link>
          </div>
          {suggestions?.filter((item) => {
            return item?.category.includes(filter) && item?.status == "Suggestion";//return all items in the array whose category falls under the selected state
          })?.length > 0 ? (
            suggestions
              ?.filter((item) => {
                return item?.category.includes(filter) && item?.status == "Suggestion";//return all items in the array whose category falls under the selected state
              })
              .sort((a, b) => {
                if (sort == "Most Upvotes") {
                  return b?.upvoates - a?.upvoates
                }
                if (sort == "Least Upvotes") {
                  return a?.upvoates - b?.upvoates
                }
                if (sort == "Most Comments") {
                  return b?.comments?.length - a?.comments?.length
                }
                if (sort == "Least Comments") {
                  return a?.comments?.length - b?.comments?.length
                }

                return true
              })
              .map((item, index) => {//lists all items returned by the filter
                console.log(item);
                return (
                  <div className={styles2.sugSpace}>
                    <div className={styles2.topic}>
                      <button
                        className={styles2.btn8}
                        onClick={() => {
                          let tempsuggestions = [...suggestions]
                          for (var i in tempsuggestions) {
                            if (tempsuggestions[i].id == item?.id) {
                              tempsuggestions[i].upvoates = tempsuggestions[i].upvoates + 1;

                              setSuggestions([...tempsuggestions])
                              break; //Stop this loop, we found it!
                            }
                          }
                        }}>
                        <span></span>
                        {item?.upvoates}
                      </button>
                      <div className={styles2.txt}>
                        <Link href={"/feedback-detail/?id="
                        /*sends the id and tile of the suggestion
                           you want to read to the details
                           page so that it displays that
                           specific suggestions details*/ + item?.id}>
                          <text>{item?.title}</text>
                        </Link>
                        <p>{item?.details}</p>
                        <button className={styles2.btn9}>
                          {item?.category}
                        </button>
                      </div>

                      <div className={styles2.chat}>
                        <span></span> {item?.comments?.length}
                      </div>
                      <div className={styles2.chat2}>
                        <button className={styles2.btn10}
                          onClick={() => {
                            let tempsuggestions = [...suggestions]
                            for (var i in tempsuggestions) {
                              if (tempsuggestions[i].id == item?.id) {
                                tempsuggestions[i].upvoates = tempsuggestions[i].upvoates + 1;

                                setSuggestions([...tempsuggestions])
                                break; //Stop this loop, we found it!
                              }
                            }
                          }}>
                          <span></span>
                          {item?.upvoates}
                        </button>
                        <div className={styles2.chat1}>
                          <span></span> {item?.comments?.length}
                        </div>
                      </div>
                    </div>
                  </div>
                );
              })
          ) : (
            <div className={styles.sugSpace}>
              <div className={styles.img2}></div>
              <text>There is no feedback yet.</text>
              <p>
                Got a suggestion? Found a bug that needs to be squashed?
                <br></br> We love hearing about new ideas to improve our app.
              </p>
              <Link href="/feedback-new">
                <button className={styles.btn8}>+ Add Feedback</button>
              </Link>
            </div>
          )}
        </div>
      </main>
      {openPopup && (
        <div className={styles.popup}>
          <Popup filter={filter} setFilter={setFilter} sort={sort} setSort={setSort} />
        </div>
      )}
    </div>
  );
}
